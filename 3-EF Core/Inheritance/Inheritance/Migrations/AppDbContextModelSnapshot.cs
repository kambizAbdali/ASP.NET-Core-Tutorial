// <auto-generated />
using System;
using Inheritance.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inheritance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Inheritance.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Inheritance.Models.BankTransferPayment", b =>
                {
                    b.HasBaseType("Inheritance.Models.Payment");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BankTransferPayment", (string)null);
                });

            modelBuilder.Entity("Inheritance.Models.CreditCardPayment", b =>
                {
                    b.HasBaseType("Inheritance.Models.Payment");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CreditCardPayment", (string)null);
                });

            modelBuilder.Entity("Inheritance.Models.BankTransferPayment", b =>
                {
                    b.HasOne("Inheritance.Models.Payment", null)
                        .WithOne()
                        .HasForeignKey("Inheritance.Models.BankTransferPayment", "PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inheritance.Models.CreditCardPayment", b =>
                {
                    b.HasOne("Inheritance.Models.Payment", null)
                        .WithOne()
                        .HasForeignKey("Inheritance.Models.CreditCardPayment", "PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
